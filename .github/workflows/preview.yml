name: Preview

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  deployments: write
  pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    steps:

      - uses: actions/checkout@v4

      - name: Setup asdf
        uses: asdf-vm/actions/setup@v4

      - name: Install Node.js and pnpm
        run: |
          asdf plugin add nodejs
          asdf plugin add pnpm
          asdf install
          asdf reshim

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Deploy and get preview URL
        id: deploy
        run: |
          OUTPUT=$(pnpm wrangler versions upload 2>&1)
          echo "$OUTPUT"
          PREVIEW_URL=$(echo "$OUTPUT" | grep "Version Preview URL:" | sed 's/Version Preview URL: //')
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Show Preview URL
        run: |
            echo "Preview URL: ${{ env.PREVIEW_URL }}"

      - name: Delete previous bot comments
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            // GitHub Actionsボットのコメントを削除
            for (const comment of comments) {
              if (comment.user.type === 'Bot') {
                await github.rest.issues.deleteComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: comment.id
                });
              }
            }

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const previewUrl = '${{ env.PREVIEW_URL }}';
            const comment = `🚀 プレビューデプロイが完了しました！\n\nプレビューURL: ${previewUrl}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
